{"ast":null,"code":"var _jsxFileName = \"/Users/maksim/Documents/Worksapce/todo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nclass Conditioner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: 0\n    }; // Привязка необходима, чтобы сделать this доступным в коллбэке\n\n    this.onIncrease = this.onIncrease.bind(this);\n    this.onDecrease = this.onDecrease.bind(this);\n  }\n\n  onIncrease() {\n    this.setState(prevState => ({\n      temperature: prevState.temperature + '.mx-delete-b'\n    }));\n  }\n\n  onDecrease() {\n    this.setState(prevState => ({\n      temperature: prevState.temperature - 1\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0430\\u044F \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430: \", this.state.temperature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onDecrease,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onIncrease,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Conditioner, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/maksim/Documents/Worksapce/todo/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById","Conditioner","Component","constructor","props","state","temperature","onIncrease","bind","onDecrease","setState","prevState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAH,eAAe;;AAEf,MAAMI,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb,CAFe,CAIf;;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,GAAE;AACR,SAAKG,QAAL,CAAcC,SAAS,KAAK;AACxBL,MAAAA,WAAW,EAAEK,SAAS,CAACL,WAAV,GAAwB;AADb,KAAL,CAAvB;AAGH;;AAEDG,EAAAA,UAAU,GAAE;AACR,SAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBL,MAAAA,WAAW,EAAEK,SAAS,CAACL,WAAV,GAAwB;AADb,KAAL,CAAvB;AAGH;;AAEDR,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAA,8BACJ;AAAA,sIAA0B,KAAKO,KAAL,CAAWC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAQ,QAAA,OAAO,EAAE,KAAKG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAQ,QAAA,OAAO,EAAE,KAAKF,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKH;;AA5BqC;;AA+B1CZ,QAAQ,CAACG,MAAT,eAAgB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nclass Conditioner extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {temperature: 0};\n\n        // Привязка необходима, чтобы сделать this доступным в коллбэке\n        this.onIncrease = this.onIncrease.bind(this);\n        this.onDecrease = this.onDecrease.bind(this);\n    }\n\n    onIncrease(){\n        this.setState(prevState => ({\n            temperature: prevState.temperature + '.mx-delete-b'\n        }))\n    }\n\n    onDecrease(){\n        this.setState(prevState => ({\n            temperature: prevState.temperature - 1\n        }))\n    }\n\n    render() {\n        return (<p>\n            <h2>Текущая температура: {this.state.temperature}</h2>\n            <button onClick={this.onDecrease}>-</button>\n            <button onClick={this.onIncrease}>+</button>\n        </p>);\n    }\n}\n\nReactDOM.render(<Conditioner/>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}