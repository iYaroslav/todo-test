{"ast":null,"code":"import _slicedToArray from \"/Users/maksim/Documents/Worksapce/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/maksim/Documents/Worksapce/todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useRef } from 'react';\nimport { append, update, filter } from 'ramda';\nimport { v4 as uuid } from 'uuid';\nimport './App.css';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var inputRef = useRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  var handleSubmit = useCallback(function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setInputValue('');\n    inputRef.current.focus();\n    setTodos(append({\n      key: uuid(),\n      title: inputValue,\n      archived: false\n    }));\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        ref: inputRef,\n        type: 'text',\n        value: inputValue,\n        onChange: function onChange(e) {\n          return setInputValue(e.target.value);\n        },\n        placeholder: 'Enter todo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-add\",\n        type: 'submit',\n        value: 'Добавить'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      items: todos,\n      onChange: function onChange(item, index) {\n        return setTodos(update(index, item));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      onClick: function onClick() {\n        setTodos(filter(function (_ref) {\n          var archived = _ref.archived;\n          return !archived;\n        }));\n      },\n      children: \"Delete archived items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"f5H9zy5dOOXw9Zdpn+dZ6TmbZuw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maksim/Documents/Worksapce/todo/src/App.js"],"names":["useState","useCallback","useRef","append","update","filter","v4","uuid","TodoList","App","inputRef","inputValue","setInputValue","todos","setTodos","handleSubmit","e","preventDefault","stopPropagation","current","focus","key","title","archived","target","value","item","index"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,OAAvC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAMC,QAAQ,GAAGR,MAAM,EAAvB;;AAEA,kBAAoCF,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOW,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0BZ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,YAAY,GAAGd,WAAW,CAAC,UAACe,CAAD,EAAO;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AAEAN,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,IAAAA,QAAQ,CAACS,OAAT,CAAiBC,KAAjB;AAEAN,IAAAA,QAAQ,CAACX,MAAM,CAAC;AACdkB,MAAAA,GAAG,EAAEd,IAAI,EADK;AAEde,MAAAA,KAAK,EAAEX,UAFO;AAGdY,MAAAA,QAAQ,EAAE;AAHI,KAAD,CAAP,CAAR;AAKD,GAZ+B,EAY7B,CAACZ,UAAD,CAZ6B,CAAhC;AAcA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACL;AAAM,MAAA,QAAQ,EAAGI,YAAjB;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,GAAG,EAAGL,QAFR;AAGE,QAAA,IAAI,EAAE,MAHR;AAIE,QAAA,KAAK,EAAGC,UAJV;AAKE,QAAA,QAAQ,EAAG,kBAACK,CAAD;AAAA,iBAAOJ,aAAa,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAApB;AAAA,SALb;AAME,QAAA,WAAW,EAAE;AANf;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAE,QAFR;AAGE,QAAA,KAAK,EAAE;AAHT;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAkBL,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGZ,KAAlB;AAA0B,MAAA,QAAQ,EAAG,kBAACa,IAAD,EAAOC,KAAP;AAAA,eAAiBb,QAAQ,CAACV,MAAM,CAACuB,KAAD,EAAQD,IAAR,CAAP,CAAzB;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,YAlBK,eAoBL;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,mBAAM;AAC7CZ,QAAAA,QAAQ,CAACT,MAAM,CAAC;AAAA,cAAGkB,QAAH,QAAGA,QAAH;AAAA,iBAAkB,CAACA,QAAnB;AAAA,SAAD,CAAP,CAAR;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAwBD;;GA5CQd,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import { useState, useCallback, useRef } from 'react'\nimport { append, update, filter } from 'ramda'\nimport { v4 as uuid } from 'uuid'\n\nimport './App.css'\nimport TodoList from './TodoList'\n\nfunction App() {\n  const inputRef = useRef()\n\n  const [inputValue, setInputValue] = useState('')\n  const [todos, setTodos] = useState([])\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    setInputValue('')\n    inputRef.current.focus()\n\n    setTodos(append({\n      key: uuid(),\n      title: inputValue,\n      archived: false,\n    }))\n  }, [inputValue])\n\n  return <div className=\"app\">\n    <form onSubmit={ handleSubmit }>\n      <input\n        className='todo-input'\n        ref={ inputRef }\n        type={'text'}\n        value={ inputValue }\n        onChange={ (e) => setInputValue(e.target.value) }\n        placeholder={'Enter todo'}\n      />\n\n      <input\n        className='todo-add'\n        type={'submit'}\n        value={'Добавить'}\n      />\n    </form>\n\n    <TodoList items={ todos } onChange={ (item, index) => setTodos(update(index, item)) } />\n\n    <button className='todo-button' onClick={() => {\n      setTodos(filter(({ archived }) => !archived))\n    } }>Delete archived items</button>\n  </div>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}