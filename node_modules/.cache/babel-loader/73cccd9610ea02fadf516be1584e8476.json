{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maksim/Documents/Worksapce/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/maksim/Documents/Worksapce/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/maksim/Documents/Worksapce/todo/src/App.test.js\",\n    _this = this;\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('Check for existing text strings on page', function () {\n  test('Complete is in the document', function () {\n    var _render = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 34\n    }, _this)),\n        getByRole = _render.getByRole;\n\n    var CompleteButton = getByRole('button', {\n      name: /Complete/i\n    });\n    expect(CompleteButton).toBeInTheDocument();\n  });\n  test('Use Hooks in a React application is in the document', function () {\n    var _render2 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 34\n    }, _this)),\n        getByRole = _render2.getByRole;\n\n    var UseHooks = getByRole('row', {\n      name: /Use Hooks in a React/i\n    });\n    expect(UseHooks).toBeInTheDocument();\n  });\n});\ndescribe('Verify that click actions work', function () {\n  test('Click on Complete and show TODO as completed', function () {\n    var _render3 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 34\n    }, _this)),\n        getByRole = _render3.getByRole;\n\n    var CompleteButton = getByRole('button', {\n      name: /Complete/i\n    });\n    var UseHooks = getByRole('heading', {\n      name: /Use Hooks in a React/i\n    });\n    userEvent.click(CompleteButton);\n    expect(UseHooks.className).toContain('true');\n  });\n  test('Do not show TODO as completed unless we click on Complete', function () {\n    var _render4 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }, _this)),\n        getByRole = _render4.getByRole;\n\n    var UseHooks = getByRole('heading', {\n      name: /Use Hooks in a React/i\n    });\n    expect(UseHooks.className).toContain('false');\n  });\n  test('Click on Delete and check if TODO is no longer visible', function () {\n    var _render5 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 34\n    }, _this)),\n        getByRole = _render5.getByRole;\n\n    var DeleteButton = getByRole('button', {\n      name: /Delete/i\n    });\n    var UseHooks = getByRole('heading', {\n      name: /Use Hooks in a React/i\n    }); // First we click on Delete, then we click on Confirm\n\n    userEvent.click(DeleteButton);\n    var ConfirmDelete = getByRole('button', {\n      name: /OK/i\n    });\n    userEvent.click(ConfirmDelete);\n    expect(UseHooks).not.toBeInTheDocument();\n  });\n  test('Click on Delete, click Cancel and check if TODO is still visible', function () {\n    var _render6 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 34\n    }, _this)),\n        getByRole = _render6.getByRole;\n\n    var DeleteButton = getByRole('button', {\n      name: /Delete/i\n    });\n    var UseHooks = getByRole('heading', {\n      name: /Use Hooks in a React/i\n    }); // First we click on Delete, then we click on Cancel\n\n    userEvent.click(DeleteButton);\n    var CancelDelete = getByRole('button', {\n      name: /Cancel/i\n    });\n    userEvent.click(CancelDelete);\n    expect(UseHooks).toBeInTheDocument();\n  });\n});\ndescribe('Ensure we can add new TODOs', function () {\n  test('Type some text in title and check that the text is visible', function () {\n    var _render7 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 39\n    }, _this)),\n        getByLabelText = _render7.getByLabelText;\n\n    var TodoInput = getByLabelText('Title');\n    userEvent.type(TodoInput, 'Todotext');\n    expect(TodoInput).toHaveValue('Todotext');\n  });\n  test('Type some text in title and check that the date input is visible', function () {\n    var _render8 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 39\n    }, _this)),\n        getByLabelText = _render8.getByLabelText;\n\n    var TodoInput = getByLabelText('Title');\n    userEvent.type(TodoInput, 'Todotext');\n    var DateInput = getByLabelText('Select a date');\n    expect(DateInput).toBeVisible();\n  });\n  test('Check that date input is not visible by default', function () {\n    var _render9 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 36\n    }, _this)),\n        queryByText = _render9.queryByText;\n\n    var DateInput = queryByText('Select a date');\n    expect(DateInput).not.toBeInTheDocument();\n  });\n  test('If we enter the title and dont select a date, check that \"Add TODO\" is disabled', function () {\n    var _render10 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 50\n    }, _this)),\n        getByRole = _render10.getByRole,\n        getByLabelText = _render10.getByLabelText;\n\n    var TodoInput = getByLabelText('Title');\n    userEvent.type(TodoInput, 'Todotext');\n    var AddTodo = getByRole('button', {\n      name: /Add TODO/i\n    });\n    expect(AddTodo).toBeDisabled();\n  });\n  test('If we enter the title and click to select a date, check that \"Add Todo\" is enabled\"', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _render11, getByRole, getByLabelText, TodoInput, SelectDateInput, CalendarDate, AddTodoButton;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _render11 = render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 50\n            }, _this)), getByRole = _render11.getByRole, getByLabelText = _render11.getByLabelText;\n            TodoInput = getByLabelText('Title');\n            userEvent.type(TodoInput, 'Todotext');\n            SelectDateInput = screen.getByPlaceholderText(/select date/i);\n            fireEvent.keyDown(SelectDateInput, {\n              key: 'Enter',\n              code: 'Enter'\n            });\n            CalendarDate = screen.getByText(/15/i);\n            fireEvent.click(CalendarDate);\n            AddTodoButton = getByRole('button', {\n              name: /Add TODO/i\n            });\n            expect(AddTodoButton).toBeEnabled();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});","map":{"version":3,"sources":["/Users/maksim/Documents/Worksapce/todo/src/App.test.js"],"names":["React","render","screen","fireEvent","userEvent","App","describe","test","getByRole","CompleteButton","name","expect","toBeInTheDocument","UseHooks","click","className","toContain","DeleteButton","ConfirmDelete","not","CancelDelete","getByLabelText","TodoInput","type","toHaveValue","DateInput","toBeVisible","queryByText","AddTodo","toBeDisabled","SelectDateInput","getByPlaceholderText","keyDown","key","code","CalendarDate","getByText","AddTodoButton","toBeEnabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport App from './App';\n\ndescribe('Check for existing text strings on page', () => {\n  test('Complete is in the document', () => {\n    const { getByRole } = render(<App />);\n    const CompleteButton = getByRole('button', { name: /Complete/i });\n    expect(CompleteButton).toBeInTheDocument();\n  });\n\n  test('Use Hooks in a React application is in the document', () => {\n    const { getByRole } = render(<App />);\n    const UseHooks = getByRole('row', { name: /Use Hooks in a React/i });\n    expect(UseHooks).toBeInTheDocument();\n  });\n});\n\ndescribe('Verify that click actions work', () => {\n  test('Click on Complete and show TODO as completed', () => {\n    const { getByRole } = render(<App />);\n    const CompleteButton = getByRole('button', { name: /Complete/i });\n    const UseHooks = getByRole('heading', { name: /Use Hooks in a React/i });\n    userEvent.click(CompleteButton);\n    expect(UseHooks.className).toContain('true');\n  });\n  test('Do not show TODO as completed unless we click on Complete', () => {\n    const { getByRole } = render(<App />);\n    const UseHooks = getByRole('heading', { name: /Use Hooks in a React/i });\n    expect(UseHooks.className).toContain('false');\n  });\n\n  test('Click on Delete and check if TODO is no longer visible', () => {\n    const { getByRole } = render(<App />);\n    const DeleteButton = getByRole('button', { name: /Delete/i });\n    const UseHooks = getByRole('heading', { name: /Use Hooks in a React/i });\n    // First we click on Delete, then we click on Confirm\n    userEvent.click(DeleteButton);\n    const ConfirmDelete = getByRole('button', {\n      name: /OK/i,\n    });\n    userEvent.click(ConfirmDelete);\n    expect(UseHooks).not.toBeInTheDocument();\n  });\n\n  test('Click on Delete, click Cancel and check if TODO is still visible', () => {\n    const { getByRole } = render(<App />);\n    const DeleteButton = getByRole('button', { name: /Delete/i });\n    const UseHooks = getByRole('heading', { name: /Use Hooks in a React/i });\n    // First we click on Delete, then we click on Cancel\n    userEvent.click(DeleteButton);\n    const CancelDelete = getByRole('button', {\n      name: /Cancel/i,\n    });\n    userEvent.click(CancelDelete);\n    expect(UseHooks).toBeInTheDocument();\n  });\n});\n\ndescribe('Ensure we can add new TODOs', () => {\n  test('Type some text in title and check that the text is visible', () => {\n    const { getByLabelText } = render(<App />);\n    const TodoInput = getByLabelText('Title');\n    userEvent.type(TodoInput, 'Todotext');\n    expect(TodoInput).toHaveValue('Todotext');\n  });\n\n  test('Type some text in title and check that the date input is visible', () => {\n    const { getByLabelText } = render(<App />);\n    const TodoInput = getByLabelText('Title');\n    userEvent.type(TodoInput, 'Todotext');\n    const DateInput = getByLabelText('Select a date');\n    expect(DateInput).toBeVisible();\n  });\n\n  test('Check that date input is not visible by default', () => {\n    const { queryByText } = render(<App />);\n    const DateInput = queryByText('Select a date');\n    expect(DateInput).not.toBeInTheDocument();\n  });\n\n  test('If we enter the title and dont select a date, check that \"Add TODO\" is disabled', () => {\n    const { getByRole, getByLabelText } = render(<App />);\n    const TodoInput = getByLabelText('Title');\n    userEvent.type(TodoInput, 'Todotext');\n    const AddTodo = getByRole('button', {\n      name: /Add TODO/i,\n    });\n    expect(AddTodo).toBeDisabled();\n  });\n\n  test('If we enter the title and click to select a date, check that \"Add Todo\" is enabled\"', async () => {\n    const { getByRole, getByLabelText } = render(<App />);\n    const TodoInput = getByLabelText('Title');\n\n    userEvent.type(TodoInput, 'Todotext');\n    const SelectDateInput = screen.getByPlaceholderText(/select date/i);\n    fireEvent.keyDown(SelectDateInput, { key: 'Enter', code: 'Enter' });\n\n    const CalendarDate = screen.getByText(/15/i);\n\n    fireEvent.click(CalendarDate);\n\n    const AddTodoButton = getByRole('button', {\n      name: /Add TODO/i,\n    });\n    expect(AddTodoButton).toBeEnabled();\n  });\n});\n"]},"metadata":{},"sourceType":"module"}